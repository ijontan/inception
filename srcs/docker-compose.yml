services:
  nginx:
    build: 
      context: ./requirements/nginx
      network: host 
    restart: unless-stopped
    ports: 
      - 443:443
    networks:
      - my_awesome_network
    # volumes:
    #   - wp_data:/var/www/html
    volumes_from:
      - wordpress:rw
    
  wordpress:
    build: 
      context: ./requirements/wordpress
      network: host
    restart: unless-stopped
    networks:
      - my_awesome_network
    volumes:
      - wp_data:/var/www/html:z
    env_file:
      - .env
    environment:
      - DB_HOST=mariadb

  mariadb:
    build: 
      context: ./requirements/mariadb
      network: host
    restart: unless-stopped
    networks:
      - my_awesome_network
    volumes:
      - db_data:/var/lib/mysql
    env_file:
      - .env
  redis:
    build:
      context: ./requirements/mariadb
      network: host
    restart: unless-stopped
    networks:
      - my_awesome_network

  ftp:
    build: ./requirements/bonus/ftp/.
    restart: unless-stopped
    depends_on:
      - wordpress
    volumes:
      - wp_data:/var/www/html
    env_file:
      - .env
    ports:
      - "21:21"
      - "21100-21110:21100-21110"
    networks:
      - my_awesome_network

  adminer:
    build: ./requirements/bonus/adminer/.
    restart: unless-stopped
    depends_on:
      - mariadb
    expose:
      - "9000"
    networks:
      - my_awesome_network

  watchtower:
    image: containrrr/watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  static:
    build: ./requirements/bonus/static/.
    restart: unless-stopped
    expose:
      - "8080:8080"
    networks:
      - my_awesome_network



volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $HOME/data/db_data
  wp_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: $HOME/data/wp_data

networks:
  my_awesome_network:
